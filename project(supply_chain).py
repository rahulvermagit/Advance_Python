# -*- coding: utf-8 -*-
"""Project(supply_chain).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/188OS4o28EWpDim1-LzcxF6AmySdv6nCo
"""

import numpy as np
import pandas as pd

df=pd.read_csv("/content/supply_chain.csv")

df.head()

import plotly.express as px
import plotly.io as pio
import plotly.graph_objects as go
pio.templates.default = "plotly_white"

df.describe()

# Now let’s get started with analyzing the Supply Chain by looking at the relationship between the
# price of the products and the revenue generated by them:

fig = px.scatter(df, x='Price',
                 y='Revenue generated',
                 color='Product type',
                 hover_data=['Number of products sold'],
                 trendline="ols")
fig.show()

# Thus, the company derives more revenue from skincare products, and the higher the price of skincare products,
# the more revenue they generate. Now let’s have a look at the sales by product type:

sales_data = df.groupby('Product type')['Number of products sold'].sum().reset_index()
# sales_data

pie_chart = px.pie(sales_data, values='Number of products sold',
                   names='Product type',
                   title='Sales by Product Type',
                   hover_data=['Number of products sold'],
                   hole=0.5,
                   color_discrete_sequence=px.colors.qualitative.Pastel)

pie_chart.update_traces(textposition='inside', textinfo='percent+label')
pie_chart.show()

# So 45% of the business comes from skincare products, 29.5% from haircare, and 25.5% from cosmetics.
# Now let’s have a look at the total revenue generated from shipping carriers:

total_revenue = df.groupby('Shipping carriers')['Revenue generated'].sum().reset_index()
fig = go.Figure()
fig.add_trace(go.Bar(x=total_revenue['Shipping carriers'],
                     y=total_revenue['Revenue generated']))
fig.update_layout(title='Total Revenue by Shipping Carrier',
                  xaxis_title='Shipping Carrier',
                  yaxis_title='Revenue Generated')
fig.show()

# So the company is using three carriers for transportation,
# and Carrier B helps the company in generating more revenue. Now let’s have a look at
# the Average lead time and Average Manufacturing Costs for all products of the company:

avg_lead_time = df.groupby('Product type')['Lead time'].mean().reset_index()
# avg_lead_time
avg_manufacturing_costs = df.groupby('Product type')['Manufacturing costs'].mean().reset_index()
result = pd.merge(avg_lead_time, avg_manufacturing_costs,
                  on='Product type')
result.rename(columns={'Lead time': 'Average Lead Time',
                       'Manufacturing costs': 'Average Manufacturing Costs'},
              inplace=True)
print(result)

# Analyzing SKUs
There’s a column in the dataset as SKUs. You must have heard it for the very first time. So,
SKU stands for Stock Keeping Units. They’re like special codes that help companies keep track of
all the different things they have for sale. Imagine you have a large toy store with lots of toys.

Each toy is different and has its name and price, but when you want to know how many you have left,
you need a way to identify them. So you give each toy a unique code, like a secret number only the store knows.
This secret number is called SKU.

I hope you have now understood what’s SKU. Now let’s analyze the revenue generated by each SKU:

revenue_chart = px.line(df, x='SKU',
                        y='Revenue generated',
                        title='Revenue Generated by SKU')
revenue_chart.show()

# There’s another column in the dataset as Stock levels. Stock levels refer to
# the number of products a store or business has in its inventory.
# Now let’s have a look at the stock levels of each SKU:

stock_chart = px.line(df, x='SKU',
                      y='Stock levels',
                      title='Stock Levels by SKU')
stock_chart.show()

# Now let’s have a look at the order quantity of each SKU:

order_quantity_chart = px.bar(df, x='SKU',
                              y='Order quantities',
                              title='Order Quantity by SKU')
order_quantity_chart.show()

# Cost Analysis
Now let’s analyze the shipping cost of Carriers:

shipping_cost_chart = px.bar(df, x='Shipping carriers',
                             y='Shipping costs',
                             title='Shipping Costs by Carrier')
shipping_cost_chart.show()

# In one of the above visualizations, we discovered that Carrier B helps the company in more revenue.
# It is also the most costly Carrier among the three.
# Now let’s have a look at the cost distribution by transportation mode:

transportation_chart = px.pie(df,
                              values='Costs',
                              names='Transportation modes',
                              title='Cost Distribution by Transportation Mode',
                              hole=0.5,
                              color_discrete_sequence=
                              px.colors.qualitative.Pastel)
transportation_chart.show()

# So the company spends more on Road and Rail modes of transportation for the transportation of Goods.

# Analyzing Defect Rate
# The defect rate in the supply chain refers to the percentage of products that have something wrong or
# are found broken after shipping. Let’s have a look at the average defect rate of all product types:

defect_rates_by_product = df.groupby('Product type')['Defect rates'].mean().reset_index()

fig = px.bar(defect_rates_by_product, x='Product type', y='Defect rates',
             title='Average Defect Rates by Product Type')
fig.show()

# So the defect rate of haircare products is higher.
# Now let’s have a look at the defect rates by mode of transportation:

pivot_table = pd.pivot_table(df, values='Defect rates',
                             index=['Transportation modes'],
                             aggfunc='mean')

transportation_chart = px.pie(values=pivot_table["Defect rates"],
                              names=pivot_table.index,
                              title='Defect Rates by Transportation Mode',
                              hole=0.5,
                              color_discrete_sequence=
                              px.colors.qualitative.Pastel)
transportation_chart.show()

# Road transportation results in a higher defect rate, and Air transportation has the lowest defect rate.

# So this is how you can analyze a company’s supply chain using the Python programming language.